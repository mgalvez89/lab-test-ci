<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-BVJNK8N" ignored="1" name="Default test" tests="14" failures="4" timestamp="2022-11-13T21:07:18 CST" time="5.304" errors="0">
  <testcase name="verificarGuardarIngrediente1ComoOpcionInvalida" time="0.013" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente1ComoPeperoni" time="0.002" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente1ComoPimiento" time="0.005" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente2ComoHongos" time="0.002" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente2ComoJamon" time="0.003" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente3ComoEspinaca" time="0.002" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarGuardarIngrediente3ComoSalchicha" time="0.003" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarListaIngredientesNoVegetarianos" time="0.025" classname="proyecto_testng.TestPizzeriaEjercicio1">
    <failure type="java.lang.AssertionError" message="expected [Selecciona 3 ingredientes de la siguiente lista: 
[a] Pimiento 
[b] Hongos 
[c] Espinaca 
[d] Peperoni 
[e] Jamon 
] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]">
      <![CDATA[java.lang.AssertionError: expected [Selecciona 3 ingredientes de la siguiente lista: 
[a] Pimiento 
[b] Hongos 
[c] Espinaca 
[d] Peperoni 
[e] Jamon 
] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at proyecto_testng.TestPizzeriaEjercicio1.verificarListaIngredientesNoVegetarianos(TestPizzeriaEjercicio1.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verificarListaIngredientesNoVegetarianos -->
  <testcase name="verificarListaIngredientesVegetarianos" time="0.004" classname="proyecto_testng.TestPizzeriaEjercicio1">
    <failure type="java.lang.AssertionError" message="expected [Selecciona 3 ingredientes de la siguiente lista: 
[a] Pimiento 
[b] Hongos 
[c] Espinaca 
[o] Ninguno 

] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]">
      <![CDATA[java.lang.AssertionError: expected [Selecciona 3 ingredientes de la siguiente lista: 
[a] Pimiento 
[b] Hongos 
[c] Espinaca 
[o] Ninguno 

] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at proyecto_testng.TestPizzeriaEjercicio1.verificarListaIngredientesVegetarianos(TestPizzeriaEjercicio1.java:135)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verificarListaIngredientesVegetarianos -->
  <testcase name="verificarMensajeDeInicioSeDespliega" time="0.003" classname="proyecto_testng.TestPizzeriaEjercicio1">
    <failure type="java.lang.AssertionError" message="expected [Bienvenido a la aplicación para ordenar pizza.

 Sigue las instrucciones por favor.

] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]">
      <![CDATA[java.lang.AssertionError: expected [Bienvenido a la aplicación para ordenar pizza.

 Sigue las instrucciones por favor.

] but found [Bienvenido a la aplicaciÃ³n para ordenar pizza.\n\n Sigue las instrucciones por favor.kaka]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at proyecto_testng.TestPizzeriaEjercicio1.verificarMensajeDeInicioSeDespliega(TestPizzeriaEjercicio1.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verificarMensajeDeInicioSeDespliega -->
  <testcase name="verificarOpcionVegAlPreguntarOpcionVeganaFalse" time="3.961" classname="proyecto_testng.TestPizzeriaEjercicio1">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at proyecto_testng.TestPizzeriaEjercicio1.verificarOpcionVegAlPreguntarOpcionVeganaFalse(TestPizzeriaEjercicio1.java:124)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verificarOpcionVegAlPreguntarOpcionVeganaFalse -->
  <testcase name="verificarOpcionVegAlPreguntarOpcionVeganaTrue" time="1.086" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarOpcionVeganaVerdadera" time="0.003" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="verificarOpcopnVeganaFalsa" time="0.007" classname="proyecto_testng.TestPizzeriaEjercicio1"/>
  <testcase name="guardarIngredientesComoHongos" time="0.0" classname="proyecto_testng.TestPizzeriaEjercicio1">
    <ignored/>
  </testcase> <!-- guardarIngredientesComoHongos -->
</testsuite> <!-- Default test -->
